{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","App","state","isSignedIn","uiConfig","signInFlow","signInOptions","auth","GoogleAuthProvider","PROVIDER_ID","FacebookAuthProvider","callbacks","signInSuccess","componentDidMount","onAuthStateChanged","user","setState","className","this","onClick","signOut","firebaseAuth","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8QAIAA,IAASC,cAAc,CACrBC,OAAQ,0CACRC,WAAY,6C,IAyDCC,E,4MAlDbC,MAAO,CAAEC,YAAY,G,EACrBC,SAAW,CACTC,WAAY,QACZC,cAAe,CACbT,IAASU,KAAKC,mBAAmBC,YACjCZ,IAASU,KAAKG,qBAAqBD,aAErCE,UAAW,CACTC,cAAe,kBAAM,K,EAGzBC,kBAAmB,WAEjBhB,IAASU,OAAOO,oBAAmB,SAAAC,GACjC,EAAKC,SAAS,CACZb,aAAaY,Q,4CAMnB,WAEG,OAEC,sBAAKE,UAAU,MAAf,UACE,mDACA,+CAEEC,KAAKhB,MAAMC,WACT,iCACG,8CACA,wBAAQgB,QAAS,kBAAItB,IAASU,OAAOa,WAArC,0BAGJ,cAAC,IAAD,CACAhB,SAAUc,KAAKd,SACfiB,aAAcxB,IAASU,gB,GAtChBe,aCAHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.630d9c76.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport './App.css';\nimport firebase from \"firebase\";\nimport StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\";\nfirebase.initializeApp({\n  apiKey: \"AIzaSyAsF3Peu2WtHBbpto1uaAGH2x5qt4-KqIo\" ,\n  authDomain: \"fir-authentication-f91a6.firebaseapp.com\"\n\n})\n\n\n\nclass App extends Component {\n  state ={ isSignedIn: false }\n  uiConfig = {\n    signInFlow: \"popup\",\n    signInOptions: [\n      firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n      firebase.auth.FacebookAuthProvider.PROVIDER_ID,\n    ],\n    callbacks: {\n      signInSuccess: () => false\n    }\n  }\n  componentDidMount =() => {\n   \n    firebase.auth().onAuthStateChanged(user => {\n      this.setState({\n        isSignedIn:!!user\n      })\n    })\n  }\n\n\n  render() {\n    \n     return (\n       \n      <div className=\"App\">\n        <h4>Hostel Allocation</h4>\n        <p>Please Sign In</p>\n        {\n          this.state.isSignedIn ? (\n            <span>\n               <div>Signed In! </div>\n               <button onClick={()=>firebase.auth().signOut()}>Sign out!</button>\n               </span>\n         ) : (\n           <StyledFirebaseAuth\n           uiConfig={this.uiConfig}\n           firebaseAuth={firebase.auth()}\n           />\n         )\n        }\n        \n       \n      </div>\n      \n    )\n  }\n}\n\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}